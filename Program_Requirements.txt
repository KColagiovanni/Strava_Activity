---------------------------------------------- All Activities ----------------------------------------------------------
X * Create a text field to search activity by name, where the <search text> includes and not be an exact match.
X * Add a filter option for dates (from and to).
X * Add a filter option for distance (more than X, less than X).
X * Add a filter option for elevation gain (more than X, less than X).
X * Add a filter option for highest elevation (more than X, less than X).
X * Add a filter option for average speed (more than X, less than X).
X * Add a filter option for max speed (more than X, less than X).
X * Add a filter option for moving time (more than X, less than X).
X * Add a filter option for commute.
X * Add a filter option for activity type.
X * Add a filter option for gear.
* Add totals for each of the columns.
X * Give the filter options the ability to be collapsed.
X * Make activity names a link that when clicked in will bring the user to the activity, which brings the user to a page
  that shows the details of the activity.
X * Graph all activities by selected column.
- Move the graphs to another page or section so it doesn't slow down the load time of the page.
* Show trend lines on the activity graphs.
X * Make the page display less activities than all of them, per page, maybe 25, 50, or 100 at a time.

------------------------------------------ Individual Activities -------------------------------------------------------
X * Create a button that opens up the activity in Strava in a new tab.
X * Figure out how to get data from .fit, .gpx, and .tcx files.(Look into the fitdecode, gpxpy, and tcxparser libraries)
X * Get individual activity data by using the .fit, .gpx, and .tcx activity files.
X * When displaying individual activities, graph the speed or pace vs distance(depending on activity type), for .gpx, .fit
    and .tcx files.
X * When displaying individual activities, graph elevation vs distance, for .gpx, .fit, and .tcx files.
X * When displaying individual activities, if applicable, graph hr vs distance, for .gpx, .fit, and .tcx files.
X * When displaying individual activities, if applicable, graph cadence vs distance, for .gpx, .fit, and .tcx files.
X * When displaying individual activities, if applicable, graph power vs distance, for .gpx, .fit, and .tcx files.
* Display the activity on an embedded map.
* Handle outliers on the graphed data (speeds that are higher than they should be for example).

------------------------------------------------- Other ----------------------------------------------------------------
X * Make a nav bar that is displayed on every page.
X * Make an HTML open file dialog option for file upload.
* Add an option for the user to see all time data for distance, total climbing for all activity types (Ex.
  rides/runs/swims/etc) and gear.
X * Make a section where the user can enter personal data (weight, height, age, gender, local timezone, etc).
* Style the page using CSS.
* Explore option of making an API to get user activity.
X * Don't allow the user to select "Show Activities" unless a database and table is detected.
X * Implement a calorie calculator that will calculate caloric needs to maintain weight, lose/gain 2Lbs a
    week(-1000/+1000 daily), lose/gain 1Lbs a week(-500/+500 daily), or lose/gain 0.5Lbs a week(-250/+250 daily).
X * Implement a page where HR zones are calculated based off Max HR using the users age.
X * Implement a page where caloric needs are calculated based off the users age, gender, weight, height, and activity
    level.

----------------------------------------------- Unit Tests -------------------------------------------------------------
X * Home Page:
X    * Check that the page loads without errors.
X * Create DB Page:
X    * Check that the page loads without errors.
X    * Submit the form when no activities.csv is present.
X    * Submit the form when a blank/empty activities.csv is present.
X    * Submit the form when an activities.csv with headers only is present.
X    * Submit the form when a valid activities.csv with headers and activity data is present.
X * Individual Activities:
X    * Load each activity and check that the page loads without errors.
X * Show Activities Page:
X    * Check that the page loads without errors.
X    * Check that all the expected elements are present (mainly in the "Filter Results" section).
X    * Positive tests: Enter valid input into each element in the Filter Results section and verify the results are
      valid.
X    * Negative tests:
X        * Enter invalid input into each element in the Filter Results section and verify the results are
          not valid.
        * Enter input that is less than the minimum value.
        * Enter input that it more than the maximum value.
X * Settings Page:
X    * Check that the page loads without errors.
X    * Check that all the expected elements on the page are present.
X * Calorie Calculator
X    * Check that the page loads correctly.
X    * Check that all the expected elements on the page are present.
X    * Positive tests: Enter valid input into each element on the page and verify the results are valid.
X    * Negative tests: Enter invalid input into each element on the page and verify the results are not valid.
X * HR Zones
X    * Check that the page loads correctly.
X    * Check that all the expected elements on the page are present.
X    * Positive tests: Enter valid input into each element on the page and verify the results are valid.
X    * Negative tests: Enter invalid input into each element on the page and verify the results are not valid.
